name: Deploy to Server

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Compress necessary files (exclude node_modules and build files)
        run: tar --exclude='.git' --exclude='node_modules' --exclude='.next' --exclude='build.tar.gz' -czf build-source.tar.gz * .env

      - name: Start SSH Agent and Add Key
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SERVER_SSH_KEY }}

      - name: Deploy to remote server
        env:
          PM2_APP_NAME: "rtc-frontend"
        run: |
          # Transfer the source code to the remote server
          scp -o StrictHostKeyChecking=no build-source.tar.gz ubuntu@${{ secrets.SERVER_IP }}:/tmp/build-source.tar.gz
          
          # SSH into the remote server
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.SERVER_IP }} << 'EOF'
            # Navigate to the app directory
            cd /home/rtc-frontend
          
            # Remove old files if necessary
            sudo rm -rf /home/rtc-frontend/*

            # Unpack the source code
            sudo tar -xzf /tmp/build-source.tar.gz -C .

            # Install dependencies if package.json is included
            sudo npm install

            # Build the project on the remote server
            npm run build
          
            # Check if PM2 is installed, if not install it
            if ! command -v pm2 &> /dev/null; then
              echo "PM2 not found, installing..."
              sudo npm install -g pm2
            else
              echo "PM2 is already installed"
            fi
          
            # Check if PM2 app is running, restart if it is, otherwise start it
            if pm2 describe ${{ env.PM2_APP_NAME }} > /dev/null; then
              echo "Restarting PM2 app..."
              pm2 restart ${{ env.PM2_APP_NAME }}
            else
              echo "Starting PM2 app..."
              pm2 start npm --name ${{ env.PM2_APP_NAME }} -- run start
            fi
          
            # Save the PM2 process list
            pm2 save
          EOF